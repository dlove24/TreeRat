/**
*** Provides defines for platform, compiler and header options from CMake.
***
*** Copyright (c) 2012 David Love <david@homeunix.org.uk>
***
*** Permission to use, copy, modify, and/or distribute this software for any
*** purpose with or without fee is hereby granted, provided that the above
*** copyright notice and this permission notice appear in all copies.
***
*** THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
*** WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
*** MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
*** ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
*** WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
*** ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
*** OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
***
*** \file config.h
***
*** \author David Love
*** \date November 2012
**/

#ifndef CONFIG_H
#define CONFIG_H 1

/***
**** Platform Checks
****
**/

/* Look for the machine type on Apple platforms at compile (not configure). Apple platforms
** allow multiple architectures to exit simultaneously, so we can't check at configure
**
** See: http://www.cmake.org/pipermail/cmake/2009-June/030126.html
**/

#if defined(__APPLE__)
#  if defined(__i386__)
#    undef HAVE_64_BIT
#    undef HAVE_BIG_ENDIAN
#  elif defined(__ppc__)
#    undef HAVE_64_BIT
#    define HAVE_BIG_ENDIAN
#  elif defined(__x86_64__)
#    define HAVE_64_BIT
#    undef HAVE_BIG_ENDIAN
#  elif defined(__ppc64__)
#    define HAVE_64_BIT
#    define HAVE_BIG_ENDIAN
#  else
      // oops
#    error "Unknown architecture!"
#  endif
#else
#cmakedefine HAVE_64_BIT
#cmakedefine HAVE_BIG_ENDIAN
#endif

/***
**** Header Declarations
****
**/

/* "Standard" headers files. Some or all of these should exist on
 * a reasonably sane platform
 */

#cmakedefine HAVE_ERRNO_H 1
#cmakedefine HAVE_FCNTL_H 1
#cmakedefine HAVE_INTTYPES_H 1
#cmakedefine HAVE_LIMITS_H 1
#cmakedefine HAVE_NETDB_H 1
#cmakedefine HAVE_RESOLV_H 1
#cmakedefine HAVE_SOCKLEN_T 1
#cmakedefine HAVE_STDBOOL_H 1
#cmakedefine HAVE_STDDEF_H 1
#cmakedefine HAVE_STDINT_H 1
#cmakedefine HAVE_STDLIB_H 1
#cmakedefine HAVE_STRING_H 1
#cmakedefine HAVE_UNISTD_H 1
#cmakedefine HAVE_WINSOCK2_H 1

#cmakedefine HAVE_ARPA_INET_H 1
#cmakedefine HAVE_NETINET_IN_H 1
#cmakedefine HAVE_SYS_FCNTL_H 1
#cmakedefine HAVE_SYS_SELECT_H 1
#cmakedefine HAVE_SYS_TIME_H 1
#cmakedefine HAVE_SYS_TYPES_H 1
#cmakedefine HAVE_SYS_UIO_H 1

/***
 *** Symbols Defines
 ***
 **/

#cmakedefine HAVE_AF_INET6 1

/* Work out the correct call for non-blocking sockets (if available) */
#cmakedefine HAVE_FCNTL_O_NONBLOCK 1
#cmakedefine USE_BLOCKING_SOCKETS 1

/***
**** Type Declarations
****
**/
#cmakedefine HAVE_STRUCT_ADDRINFO 1
#cmakedefine HAVE_STRUCT_SOCKADDR_IN6 1
#cmakedefine HAVE_STRUCT_TIMEVAL 1
#cmakedefine HAVE_WRITEV 1

#cmakedefine SIZEOF_INT ${SIZEOF_INT}
#cmakedefine SIZEOF_SHORT ${SIZEOF_SHORT}

/***
**** Function Declarations
****
**/

/* The location of popen varies a bit. These variables set both the
 * existance of popen, and its location
 */
#cmakedefine HAVE_POPEN 1
#cmakedefine POPEN_PROTO_STDLIB 1
#cmakedefine POPEN_PROTO_STDIO 1

#cmakedefine HAVE_GETENV 1

/* OpenSSL library defines.
 */
#cmakedefine HAVE_SSL 1

/* recv() and send() defines */
#cmakedefine HAVE_RECV 1

#ifdef HAVE_RECV
#  ifdef __APPLE__
#    define RECV_TYPE_ARG1 int
#    define RECV_TYPE_ARG2 void*
#    define RECV_TYPE_ARG3 size_t
#    define RECV_TYPE_ARG4 int
#    define RECV_TYPE_RETV ssize_t
#  endif
#endif

#cmakedefine HAVE_SEND 1

#ifdef HAVE_SEND
#  ifdef __APPLE__
#    define SEND_TYPE_ARG1 int
#    define SEND_QUAL_ARG2 const
#    define SEND_TYPE_ARG2 void*
#    define SEND_TYPE_ARG3 size_t
#    define SEND_TYPE_ARG4 int
#    define SEND_TYPE_RETV ssize_t
#  endif
#endif

#endif
